name: Release
on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install (bun optional)
        run: npm ci

      # Prevent loops if last commit was an automated bump
      - name: Skip if previous commit was auto-bump
        run: |
          if git log -1 --pretty=%B | grep -qiE "^Bump version to "; then
            echo "Auto-bump detected; skipping."
            exit 78
          fi

      - name: Bump patch version (no tag yet)
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          NEW_VER=$(npm version patch --no-git-tag-version)
          git add package.json package-lock.json || true
          git commit -m "Bump version to ${NEW_VER#v}"

      - name: Create tag and push
        run: |
          NEW_VER=$(node -p "require('./package.json').version")
          git tag "v${NEW_VER}"
          git push origin HEAD:main
          git push origin "v${NEW_VER}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Configure npm auth
        run: |
          npm config set //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          npm config set always-auth true
          npm config set registry https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build
        run: npm run build

      - name: Dry run (sanity check)
        run: npm publish --access public --dry-run

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}