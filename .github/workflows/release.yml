# 🚨 CRITICAL WARNING: AUTOMATED RELEASE WORKFLOW
#
# This workflow handles automated NPM publishing and version management.
# It took multiple iterations to get working correctly.
#
# DO NOT MODIFY without understanding the full dependency chain:
# - GitHub Secrets: PAT_TOKEN, NPM_TOKEN (required)
# - Package name: "grok-cli-hurry-mode" (NEVER change)
# - Git hooks: .husky/pre-commit + scripts/check-version.cjs
# - NPM authentication: Direct .npmrc creation (not npm config)
# - Dependency management: Clean install to avoid Rollup cache issues
#
# If this breaks, see troubleshooting docs:
# - .agent/sop/npm-publishing-troubleshooting.md
# - .agent/incidents/incident-npm-publish-failure.md
# - .agent/sop/release-management.md
#
# Last working config verified: 2025-10-17
# Working example: Successfully publishes version 1.0.87+
#
# ⚠️ TEST ALL CHANGES IN A FORK FIRST!

name: Release
on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      # Prevent loops if last commit was an automated bump
      - name: Skip if previous commit was auto-bump
        run: |
          if git log -1 --pretty=%B | grep -qiE "^Bump version to "; then
            echo "Auto-bump detected; skipping."
            exit 78
          fi

      - name: Bump patch version (no tag yet)
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          NEW_VER=$(npm version patch --no-git-tag-version)
          git add package.json package-lock.json || true
          git commit -m "Bump version to ${NEW_VER#v}"

      - name: Create tag and push
        run: |
          NEW_VER=$(node -p "require('./package.json').version")
          git tag "v${NEW_VER}"
          git push origin HEAD:main
          git push origin "v${NEW_VER}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Configure npm auth
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build
        run: npm run build

      - name: Dry run (sanity check)
        run: npm publish --access public --dry-run

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}